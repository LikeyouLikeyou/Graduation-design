#include "fy_network.h"
#include "fy_mqtt.h"

u8 sta;
char mqtt_message[200];
u8 *p;

void Mqtt_Progress(u8 *buf,u16 len)
{ 
	char *keyStr = "hue";
	u8 keyStrLen = strlen(keyStr)-1;
	u8 i,j;
	for(i=0;i<len-keyStrLen;i++)
	{
		for(j=0;j<keyStrLen;j++)
		{
			if(buf[i+j] != keyStr[j])	break;
		}	
		if(j==keyStrLen) break;
	}
	if(i<=len-keyStrLen)
    {
		u16 temp = 0;
		p = &buf[i];
				
		while(*p != ':') p++;
		p++;
		while(*p != '}')
		{
			temp = temp *10 + (*p - '0');
			p++;
		}
		printf(" \r\n receive message, hue = %d \r\n",temp);
    }
}

int main()
{
	  u16 cnt_5s=0;
	
    NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);
    Usart1_Configuration(115200);
    Usart3_Configuration(115200);
    Usart1_SendString("usart1 is ok!\r\n");
    delay_ms(200);

    sta=0;

    //检查ESP8266
    if(_net.Init(rxbuf,sizeof(rxbuf),txbuf,sizeof(txbuf))!=0)
    {
        printf("Net Init OK!\r\n");
        sta++;
    }
    else 
		{
        printf("Net Init Error!\r\n");
        sta=0;
    }

    if(sta==1)
    {
        //连接热点
        if(_net.ConnectAP(SSID,PWD)!=0)
        {

            printf("Conncet AP OK!\r\n");
            sta++;
        }
        else
        {
            printf("Conncet AP Error!\r\n");
            sta=0;
        }
    }

    if(sta==2)
    {
        //连接TCP，并且开启透传
        if(_net.ConnectServer(TCP,IP,PORT)!=0)
        {
            printf("Conncet Server OK!\r\n");
            sta++;
        }
        else
        {
            printf("Conncet Server Error!\r\n");
            sta=0;
        }
    }

    if(sta==3)
    {
        //登录MQTT
		_mqtt.Init(rxbuf,sizeof(rxbuf),txbuf,sizeof(txbuf));
		if(_mqtt.Connect("Client","admin","public") != 0)                                                      //Client,Username，Password
                                                   
        {
            printf("Enter MQTT OK!\r\n");
            sta++;
        }
        else
        {
            printf("Enter MQTT Error!\r\n");
            sta=0;
        }
    }

    if(sta==4)
    {
        //订阅主题
        if(_mqtt.SubscribeTopic("/mqtt/topic/1",0,1) != 0)    //tpoic,qos,是否订阅
        {
            printf("SubscribeTopic OK!\r\n");
        }
        else
        {
            printf("SubscribeTopic Error!\r\n");
        }
    }


    sta = 0;
    while(1)
    {
        if(++cnt_5s>=3000) 
				{ 
            cnt_5s=0;
            sprintf(mqtt_message,
                    "{\"method\":\"thing.service.property.set\",\"id\":\"630262306\",\"params\":{\
				            \"CurrentTemperature\":%.1f,\
				            \"hue\":%d,\
				            \"mlux\":%d\
			              },\"version\":\"1.0.0\"}",
                    13.1,
                    rand()%0x00ffffff,
                    adc_light
                   );

            _mqtt.PublishData("/sys/a1ugBNniFGU/FY-STM32/thing/event/property/post",mqtt_message,0);
        }
        if(_mqtt.rxlen) 
				{
            Mqtt_Progress(_mqtt.rxbuf,_mqtt.rxlen);
            memset(_mqtt.rxbuf,0,_mqtt.rxlen);
            _mqtt.rxlen = 0;
        }
        delay_ms(10);
    }
}




